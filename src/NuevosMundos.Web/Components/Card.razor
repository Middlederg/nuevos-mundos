<label class="cursor-pointer w-16 h-24 md:w-24 md:h-32 lg:w-32 lg:h-44
        @(IsHighlighted ? "outline outline-slate-500 outline-offset-2 md:outline-offset-4 outline-2" : "outline-none")
       rounded-lg p-1 md:p-1.5"
       style="border: 0.15em solid #@InnerCard.Biome.Color">
       
    <input type="radio"
           id="@GroupName"
           value="@GroupName"
           name="@nameof(InnerCard.Number)"
           class="hidden"
           @onchange="(args) => CardSelected()" />

    <span style="background-color:#@InnerCard.Biome.Color" class="w-full h-full flex flex-col rounded-lg text-white">
        <span class="flex justify-between px-2 text-lg">
            <span class="font-semibold font-mono">
                @InnerCard.Number
            </span>
            <span>
                <CardIcon Biome="InnerCard.Biome" />
            </span>
        </span>
        <span class="flex flex-col items-center">
            
        </span>
    </span>

</label>


@code {

    [Parameter]
    public bool IsHighlighted { get; set; } = false;

    [Parameter]
    public string GroupName { get; set; }

    [Parameter]
    public Core.Card InnerCard { get; set; }

    [Parameter]
    public EventCallback<Core.Card> OnCardSelected { get; set; }

    private async Task CardSelected()
    {
        await OnCardSelected.InvokeAsync(InnerCard);
    }

}